/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import static modeling.Controller.exportFile;
import static modeling.Controller.loadCIS;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.filechooser.FileNameExtensionFilter;

import jsdai.lang.SdaiException;
import modeling.Controller;
import dataStructure.ProgramCalculation;
import dataStructure.VFIFE_Model;

import javax.swing.JMenu;
import javax.swing.JMenuItem;

/**
 *
 * @author Xiaowei
 */
public class JFrameMain extends javax.swing.JFrame {

    private VFIFE_Model m_v5model = null;
    private ProgramCalculation calcu_model=null;
    // panel
    private VFIFE_Modeling_view m_view = null;

    /**
     * Creates new form JFrameMain
     *
     * @param v5model as the model passed in
     */
    public JFrameMain(VFIFE_Model v5model) {

        // make menu always before
        JPopupMenu.setDefaultLightWeightPopupEnabled(false);

        initComponents();

        // set frame location
        Dimension displaySize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.width > displaySize.width) {
            frameSize.width = displaySize.width;
        }
        if (frameSize.height > displaySize.height) {
            frameSize.height = displaySize.height;
        }
        this.setLocation((displaySize.width - frameSize.width) / 2, (displaySize.height - frameSize.height) / 2);

        // set visibility
        this.setVisible(true);

        // set model data
        m_v5model = v5model;
        m_view = new VFIFE_Modeling_view(m_v5model);

        //m_view=new VFIFE_Modeling_view();
        this.getContentPane().add(m_view, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuCalculate = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemExport = new javax.swing.JMenuItem();
        jMenuItemExportV5 = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuDefine = new javax.swing.JMenu();
        jMenuItemMaterial = new javax.swing.JMenuItem();
        jMenuItemAllElements = new javax.swing.JMenuItem();
        jMenuSpecify = new javax.swing.JMenu();
        jMenuItemLoad = new javax.swing.JMenuItem();
        jMenuXY = new javax.swing.JMenu();
        jMenuYZ = new javax.swing.JMenu();
        jMenuZX = new javax.swing.JMenu();
        jMenuMagnify = new javax.swing.JMenu();
        jMenuShrink = new javax.swing.JMenu();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VFIFE Modeling Tool");
        setName("mainframe"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1024, 768));
        setResizable(false);

        jMenuBar.setPreferredSize(new java.awt.Dimension(81, 28));

        jMenuFile.setText("File");
        jMenuFile.setPreferredSize(new java.awt.Dimension(35, 19));

        
        
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpen);

        jMenuItemExport.setText("Export");
        jMenuItemExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExport);

        
        /*
        jMenuItemExportV5.setText("ExportV5");
        jMenuItemExportV5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportV5ActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExportV5);
        
        */
        
        
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar.add(jMenuFile);

        jMenuDefine.setText("Define");
        
        jMenuCalculate.setText("Calculate");
        
        jMenuXY.setText("XY");
        jMenuYZ.setText("YZ");
        jMenuZX.setText("ZX");
        
        
        jMenuItemExportV5.setText("ExportV5");
        jMenuItemExportV5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportV5ActionPerformed(evt);
            }
        });
        jMenuCalculate.add(jMenuItemExportV5);
        
        
        
        jMenuItemMaterial.setText("Material");
        jMenuItemMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMaterialActionPerformed(evt);
            }
        });
        jMenuDefine.add(jMenuItemMaterial);
        
        jMenuItemAllElements.setText("AllElements");
        jMenuItemAllElements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAllElemntsActionPerformed(evt);
            }
        });
        jMenuDefine.add(jMenuItemAllElements);

        jMenuBar.add(jMenuDefine);

        jMenuSpecify.setText("Specify");

        jMenuItemLoad.setText("Load");
        jMenuSpecify.add(jMenuItemLoad);

        jMenuBar.add(jMenuSpecify);
        
        jMenuBar.add(jMenuCalculate);
        setJMenuBar(jMenuBar);
        
        JMenuAnimation = new JMenu("Animation");
        jMenuBar.add(JMenuAnimation);
        
        JMenuItemStart = new JMenuItem("Start");
        JMenuAnimation.add(JMenuItemStart);
        
        jMenuXY.setText("XY");
        jMenuYZ.setText("YZ");
        jMenuZX.setText("ZX");
        jMenuMagnify.setText("+");
        jMenuShrink.setText("-");
        
        jMenuBar.add(jMenuXY);
        jMenuBar.add(jMenuYZ);
        jMenuBar.add(jMenuZX);
        jMenuBar.add(jMenuMagnify);
        jMenuBar.add(jMenuShrink);
        
        JMenuItemStart.addActionListener(new java.awt.event.ActionListener(){

			@Override
			public void actionPerformed(ActionEvent evt) {
				// TODO Auto-generated method stub
				Runtime rt = Runtime.getRuntime();
				try {
					String path = MyPath.getProjectPath();
					//System.out.println(path);
					Process p = rt.exec(path+"\\HOUCHULI.exe");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					System.out.println("animation start failed");
				}
			}
        	
        });
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        // get file open path
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("CIS2/STP FILE/V5M FILE", "stp","v5m"));
        int i = fileChooser.showOpenDialog(getContentPane());

        if (i == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String stpFilePath = selectedFile.getAbsolutePath();
            char type=stpFilePath.charAt(stpFilePath.length()-1);
            try {
                // load file and parse
                this.getContentPane().remove(m_view);
                if(type=='m')
                {
                	m_v5model = Controller.loadV5M(stpFilePath);
                	
                }
                else
                {
                	m_v5model = loadCIS(stpFilePath);
                }
                m_view = new VFIFE_Modeling_view(m_v5model);
                this.getContentPane().add(m_view, BorderLayout.CENTER);

            } catch (SdaiException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed
    
    /*private void jMenuItemOpenv5mActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // get file open path
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("V5M FILE", "v5m"));
        int i = fileChooser.showOpenDialog(getContentPane());

        if (i == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String stpFilePath = selectedFile.getAbsolutePath();

            try {
                // load file and parse
                this.getContentPane().remove(m_view);
                m_v5model = control.Modeling.loadV5(stpFilePath);
                m_view = new VFIFE_Modeling_view(m_v5model);
                this.getContentPane().add(m_view, BorderLayout.CENTER);

            } catch (SdaiException e) {
                e.printStackTrace();
            }
        }
    }
    */
    
    private void jMenuItemExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportActionPerformed
        if (!m_v5model.isEmpty()) {
            // get file save path
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setSelectedFile(new File("model.v5m")); // default file name
            fileChooser.setFileFilter(new FileNameExtensionFilter("V5M & XML FILE", "v5m", "xml"));
            int i = fileChooser.showSaveDialog(getContentPane());
            if (i == JFileChooser.APPROVE_OPTION) {
                File getfile = fileChooser.getSelectedFile();
                try {
                    if (getfile != null) {
                        exportFile(m_v5model, getfile.getAbsolutePath());
                    }
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (SdaiException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No model to export", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemExportActionPerformed
    
    private void jMenuItemExportV5ActionPerformed(java.awt.event.ActionEvent evt) {                                                
        if (!m_v5model.isEmpty()) {
            // get file save path
        	File nodeFile ,elementFile;
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setSelectedFile(new File("node.txt")); // default file name
            fileChooser.setFileFilter(new FileNameExtensionFilter("TXT", "txt"));
            int i = fileChooser.showSaveDialog(getContentPane());
            if (i == JFileChooser.APPROVE_OPTION) {
                nodeFile = fileChooser.getSelectedFile();
              /*  try {
                    if (getfile != null) {
                        exportFile(m_v5model, getfile.getAbsolutePath());
                    }
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (SdaiException e) {
                    e.printStackTrace();
                }*/
            
            
            
            JFileChooser fileChooser2 = new JFileChooser();
            fileChooser2.setSelectedFile(new File("element.txt")); // default file name
            fileChooser2.setFileFilter(new FileNameExtensionFilter("TXT", "txt"));
            int j = fileChooser2.showSaveDialog(getContentPane());
            if (j == JFileChooser.APPROVE_OPTION) {
                elementFile = fileChooser2.getSelectedFile();
                try {
                	calcu_model = new ProgramCalculation(nodeFile.getAbsolutePath(),elementFile.getAbsolutePath());
                	calcu_model.exportV5File(m_v5model);
                } 
                catch (Exception e)
                {
                	e.printStackTrace();
                }
                /*catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (SdaiException e) {
                    e.printStackTrace();
                }*/
            }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No model to export", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }                                                 
    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMaterialActionPerformed
        if (!m_v5model.isEmpty()) {
            JDialogMaterialList materiaux = new JDialogMaterialList(m_v5model);
        }
    }//GEN-LAST:event_jMenuItemMaterialActionPerformed
    
    private void jMenuItemAllElemntsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAllElemntsActionPerformed
        if (!m_v5model.isEmpty()) {
        	//System.out.println("xyz");
        	 JDialogAll materiaux = new JDialogAll(m_v5model);
        	 materiaux.setVisible(true);
        }
    }
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuDefine;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuCalculate;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemExport;
    private javax.swing.JMenuItem jMenuItemExportV5;
    private javax.swing.JMenuItem jMenuItemLoad;
    private javax.swing.JMenuItem jMenuItemMaterial;
    private javax.swing.JMenuItem jMenuItemAllElements;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenu jMenuSpecify;
    private JMenu JMenuAnimation;
    private javax.swing.JMenu jMenuXY;
    private javax.swing.JMenu jMenuYZ;
    private javax.swing.JMenu jMenuZX;
    private javax.swing.JMenu jMenuMagnify;
    private javax.swing.JMenu jMenuShrink;
    private JMenuItem JMenuItemStart;
    // End of variables declaration//GEN-END:variables
    
    public static class MyPath {
    	 public static String getProjectPath() {
	    	 java.net.URL url = MyPath.class.getProtectionDomain().getCodeSource().getLocation();
	    	 String filePath = null;
	    	 try {
	    		 filePath = java.net.URLDecoder.decode(url.getPath(), "utf-8");
	    	 } catch (Exception e) {
	    		 e.printStackTrace();
	    	 }
	    	 if (filePath.endsWith(".jar"))
	    		 filePath = filePath.substring(0, filePath.lastIndexOf("/") + 1);
	    	 java.io.File file = new java.io.File(filePath);
	    	 filePath = file.getAbsolutePath();
	    	 return filePath;
    	 }
    }
}
